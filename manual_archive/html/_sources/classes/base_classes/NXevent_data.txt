.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXevent_data.nxdl.xml

.. index::
    ! NXevent_data (base class)
    ! event data (base class)
    see: event data (base class); NXevent_data

.. _NXevent_data:

============
NXevent_data
============

**Status**:

  base class, extends :ref:`NXobject`, version 1.1

**Description**:

  NXevent_data is a special group for storing data from neutron
  detectors in event mode.  In this mode, the detector electronics
  emits a stream of detectorID, timestamp pairs. With detectorID
  describing the detector element in which the neutron was detected
  and timestamp the timestamp at which the neutron event was
  detected. In NeXus detectorID maps to event_id, event_time_offset
  to the timestamp.

  As this kind of data is common at pulsed neutron
  sources, the timestamp is almost always relative to the start of a
  neutron pulse. Thus the pulse timestamp is recorded too together
  with an index in the event_id, event_time_offset pair at which data for
  that pulse starts. At reactor source the same pulsed data effect
  may be achieved through the use of choppers or in stroboscopic
  measurement setups.

  In order to make random access to timestamped data
  faster there is an optional array pair of
  cue_timestamp_zero and cue_index. The cue_timestamp_zero will
  contain courser timestamps then in the time array, say
  every five minutes. The cue_index will then contain the
  index into the event_id,event_time_offset pair of arrays for that
  courser cue_timestamp_zero.


**Symbols**:

  No symbol table

**Groups cited**:
  none

**Structure**:

  .. index:: event time offset (field)

  **event_time_offset[i]**: :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_TIME_OF_FLIGHT <NX_TIME_OF_FLIGHT>`}

    A list of timestamps for each event as it comes in.

  .. index:: event id (field)

  **event_id[i]**: :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`}

    There will be extra information in the NXdetector to convert 
    event_id to detector_number.

  .. index:: event time zero (field)

  **event_time_zero[j]**: :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_TIME <NX_TIME>`}

    The time that each pulse started with respect to the offset

    .. index:: offset (field attribute)

    **@offset**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`

      ISO8601

  .. index:: event index (field)

  **event_index[j]**: :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`}

    The index into the event_time_offset, event_id pair for
    the pulse occurring at the matching entry in event_time_zero.

  .. index:: pulse height (field)

  **pulse_height[i, k]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`}

    If voltages from the ends of the detector are read out this 
    is where they go. This list is for all events with information 
    to attach to a particular pulse height. The information to 
    attach to a particular pulse is located in events_per_pulse.

  .. index:: cue timestamp zero (field)

  **cue_timestamp_zero**: :ref:`NX_DATE_TIME <NX_DATE_TIME>` {units=\ :ref:`NX_TIME <NX_TIME>`}

    Timestamps matching the corresponding cue_index into the
    event_id, event_time_offset pair.

  .. index:: cue index (field)

  **cue_index**: :ref:`NX_INTEGER <NX_INTEGER>`

    Index into the event_id, event_time_offset pair matching the corresponding
    cue_timestamp.

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/base_classes/NXevent_data.nxdl.xml
