.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXsample_component.nxdl.xml

.. index::
    ! NXsample_component (base class)
    ! sample component (base class)
    see: sample component (base class); NXsample_component

.. _NXsample_component:

==================
NXsample_component
==================

**Status**:

  base class, extends :ref:`NXobject`, version 1.0

**Description**:

  One group like this per component can be recorded For a sample consisting of multiple components.

**Symbols**:

  symbolic array lengths to be coordinated between various fields

  **n_Temp**: number of temperatures

  **n_eField**: number of values in applied electric field

  **n_mField**: number of values in applied magnetic field

  **n_pField**: number of values in applied pressure field

  **n_sField**: number of values in applied stress field

**Groups cited**:
  :ref:`NXdata`

.. index:: NXdata (base class); used in base class

**Structure**:

  .. index:: name (field)

  **name**: :ref:`NX_CHAR <NX_CHAR>`

    Descriptive name of sample component

  .. index:: chemical formula (field)

  **chemical_formula**: :ref:`NX_CHAR <NX_CHAR>`

    The chemical formula specified using CIF conventions.
    Abbreviated version of CIF standard:

    * Only recognized element symbols may be used.
    * Each element symbol is followed by a 'count' number. A count of '1' may be omitted.
    * A space or parenthesis must separate each cluster of (element symbol + count).
    * Where a group of elements is enclosed in parentheses, the multiplier for the 
      group must follow the closing parentheses. That is, all element and group 
      multipliers are assumed to be printed as subscripted numbers.
    * Unless the elements are ordered in a manner that corresponds to their chemical 
      structure, the order of the elements within any group or moiety depends on 
      whether or not carbon is present.
    * If carbon is present, the order should be:

      - C, then H, then the other elements in alphabetical order of their symbol. 
      - If carbon is not present, the elements are listed purely in alphabetic order of their symbol.

    * This is the *Hill* system used by Chemical Abstracts.

  .. index:: unit cell abc (field)

  **unit_cell_abc[3]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Crystallography unit cell parameters a, b, and c

  .. index:: unit cell alphabetagamma (field)

  **unit_cell_alphabetagamma[3]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    Crystallography unit cell parameters alpha, beta, and gamma

  .. index:: unit cell volume (field)

  **unit_cell_volume**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_VOLUME <NX_VOLUME>`}

    Volume of the unit cell

  .. index:: sample orientation (field)

  **sample_orientation[3]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    This will follow the Busing and Levy convention from Acta.Crysta v22, p457 (1967)

  .. index:: orientation matrix (field)

  **orientation_matrix[3, 3]**: :ref:`NX_FLOAT <NX_FLOAT>`

    Orientation matrix of single crystal sample component.
    This will follow the Busing and Levy convention from Acta.Crysta v22, p457 (1967)

  .. index:: mass (field)

  **mass**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_MASS <NX_MASS>`}

    Mass of sample component

  .. index:: density (field)

  **density**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_MASS_DENSITY <NX_MASS_DENSITY>`}

    Density of sample component

  .. index:: relative molecular mass (field)

  **relative_molecular_mass**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_MASS <NX_MASS>`}

    Relative Molecular Mass of sample component

  .. index:: description (field)

  **description**: :ref:`NX_CHAR <NX_CHAR>`

    Description of the sample component

  .. index:: volume fraction (field)

  **volume_fraction**: :ref:`NX_FLOAT <NX_FLOAT>`

    Volume fraction of component

  .. index:: scattering length density (field)

  **scattering_length_density**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_SCATTERING_LENGTH_DENSITY <NX_SCATTERING_LENGTH_DENSITY>`}

    Scattering length density of component

  .. index:: unit cell class (field)

  **unit_cell_class**: :ref:`NX_CHAR <NX_CHAR>`

    In case it is all we know and we want to record/document it

    Any of these values:

      * ``triclinic``

      * ``monoclinic``

      * ``orthorhombic``

      * ``tetragonal``

      * ``rhombohedral``

      * ``hexagonal``

      * ``cubic``


  .. index:: space group (field)

  **space_group**: :ref:`NX_CHAR <NX_CHAR>`

    Crystallographic space group

  .. index:: point group (field)

  **point_group**: :ref:`NX_CHAR <NX_CHAR>`

    Crystallographic point group, deprecated if space_group present

  **transmission**: :ref:`NXdata`

    As a function of Wavelength

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/base_classes/NXsample_component.nxdl.xml
